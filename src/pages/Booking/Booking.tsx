import * as React from 'react';
import { Helmet } from 'react-helmet';
import { useSearchParams } from 'react-router-dom';

import Alert from '@mui/material/Alert';
import AlertTitle from '@mui/material/AlertTitle';
import List from '@mui/material/List';
import ListItem from '@mui/material/ListItem';
import Link from '@mui/material/Link';
import Button from '@mui/material/Button';
import Dialog from '@mui/material/Dialog';
import DialogActions from '@mui/material/DialogActions';
import DialogContent from '@mui/material/DialogContent';
import DialogTitle from '@mui/material/DialogTitle';
import useMediaQuery from '@mui/material/useMediaQuery';
import { useTheme } from '@mui/material/styles';

import Heading from '../../components/Heading';
import Paragraph from '../../components/Paragraph';
import { AppConfigContext, Config, CalendlyAppointment } from '../../providers/AppConfigProvider';
import bookingMetaData from './bookingMetaData';

/**
 * `invitee_email` is required on Calendly's side
 * If we gonna change it, all required fields from Calendly's side
 * must be reflected to this interface and the logic related
 */
export interface CalendlyResponse {
  assignedTo: string | null;
  eventTypeUuid: string | null;
  eventTypeName: string | null;
  eventStartTime: Date;
  eventEndTime: Date;
  inviteeUuid: string | null;
  inviteeFullName: string | null;
  inviteeEmail?: string | null;
  textReminderNumber: string | null;
}

function References() {
  const {
    calendly: { href: calendlyHref, appointments, conformation },
  }: Config = React.useContext(AppConfigContext);
  const [open, setOpen] = React.useState(false);
  const theme = useTheme();
  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));

  const handleClose = React.useCallback(function handleClose() {
    setOpen(false);
  }, []);

  const handleBackdropClick = React.useCallback(
    function handleBackdropClick(_event: Event, reason: string) {
      // Force the user to click on the action button to close the dialog
      if (reason !== 'backdropClick') {
        handleClose();
      }
    },
    [handleClose],
  );

  const [searchParams] = useSearchParams();

  const calendlyResponse: CalendlyResponse = {
    assignedTo: searchParams.get('assigned_to'),
    eventTypeUuid: searchParams.get('event_type_uuid'),
    eventTypeName: searchParams.get('event_type_name'),
    eventStartTime: new Date(searchParams.get('event_start_time') ?? ''),
    eventEndTime: new Date(searchParams.get('event_end_time') ?? ''),
    inviteeUuid: searchParams.get('invitee_uuid'),
    inviteeFullName: searchParams.get('invitee_full_name'),
    inviteeEmail: searchParams.get('invitee_email'),
    textReminderNumber: searchParams.get('text_reminder_number'),
  };

  const { inviteeEmail } = calendlyResponse;

  React.useEffect(
    function handleModalVisibility() {
      // NOTE: `inviteeEmail` is required field for booking an appointment
      setOpen(Boolean(inviteeEmail));
    },
    [inviteeEmail],
  );

  return (
    <>
      <Helmet>
        <title>{bookingMetaData.title}</title>
      </Helmet>
      <Heading>{bookingMetaData.heading}</Heading>
      <Paragraph>–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –≤–∏–¥—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π: </Paragraph>
      <List>
        {appointments.map(function renderAppointments({ id, active, newTab, label }: CalendlyAppointment) {
          const target: React.HTMLAttributeAnchorTarget | undefined = newTab ? '_blank' : undefined;
          return (
            active && (
              <ListItem key={id}>
                <Link href={`${calendlyHref}/${id}`} target={target}>
                  {label}
                </Link>
              </ListItem>
            )
          );
        })}
      </List>
      {conformation && (
        <Dialog
          fullScreen={fullScreen}
          open={open}
          onClose={handleBackdropClick}
          aria-labelledby="booking-conformation-title"
          disableEscapeKeyDown
        >
          <DialogTitle id="booking-conformation-title">–ó–∞–ø–∏—Å—å –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ</DialogTitle>
          <DialogContent dividers>
            <Paragraph>
              {calendlyResponse.inviteeFullName}, –≤—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ &quot;
              {calendlyResponse.eventTypeName}&quot; –Ω–∞ {calendlyResponse.eventStartTime.toLocaleDateString()} c{' '}
              {calendlyResponse.eventStartTime.toLocaleTimeString()} –¥–æ{' '}
              {calendlyResponse.eventEndTime.toLocaleTimeString()}.
            </Paragraph>
            <Paragraph>
              –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–π email.{' '}
              <strong>–ú—ã –ø—Ä–∏—Å–ª–∞–ª–∏ –≤–∞–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ —Å–æ –≤—Å–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.</strong> –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –±—É–¥–µ—Ç
              –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ Google Meet. –°—Å—ã–ª–∫—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –≤—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤ —Ç–æ–º –∂–µ email. –ú—ã —Ç–∞–∫–∂–µ –ø—Ä–∏—à–ª–µ–º –≤–∞–º
              –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –ø–æ email –∏ –°–ú–° —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –Ω–µ–∑–∞–¥–æ–ª–≥–æ –¥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.
            </Paragraph>
            <Paragraph>–î–æ —Å–∫–æ—Ä–æ–≥–æ üçÄ</Paragraph>
            <Alert severity="warning">
              –£–±–µ–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ—Å—å–±–∞, –±—É–¥—å—Ç–µ –≤–æ–≤—Ä–µ–º—è –∏ —Å–æ–æ–±—â–∏—Ç–µ –º–Ω–µ –∑–∞ 24 —á–∞—Å–∞, –µ—Å–ª–∏ –ø–æ –∫–∞–∫–∏–º-—Ç–æ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–º
              –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞–º –≤–∞–º –Ω—É–∂–Ω–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å. –ö–Ω–æ–ø–∫–∏ —Å –º–æ–∏–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤
              —Å–∞–º–æ–º –Ω–∏–∑—É —Å–∞–π—Ç–∞.
            </Alert>
          </DialogContent>
          <DialogActions>
            <Button variant="contained" autoFocus onClick={handleClose}>
              –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            </Button>
          </DialogActions>
        </Dialog>
      )}
      <Alert severity="warning">
        <AlertTitle>–°–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è</AlertTitle>
        –û–±—Ä–∞—â–∞–µ–º –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å
        –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞.
      </Alert>
      <Alert severity="info">
        <AlertTitle>–†—É—Å—Å–∫–∏–π —è–∑—ã–∫</AlertTitle>
        C–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–º —Å–µ—Ä–≤–∏—Å–µ, –∫–æ—Ç–æ—Ä—ã–π –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π, –æ–¥–Ω–∞–∫–æ —ç—Ç–æ—Ç
        —Å–µ—Ä–≤–∏—Å –Ω–µ –∏–º–µ–µ—Ç —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞. –î–ª—è —Ç–µ—Ö, –∫—Ç–æ –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç –ø–æ-–∞–Ω–≥–ª–∏–π—Å–∫–∏, –º—ã –æ—á–µ–Ω—å –ø–æ—Å—Ç–∞—Ä–∞–ª–∏—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
        —è–∑—ã–∫ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫–∞—Ö, –Ω–æ, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å 100%
        —Ä—É—Å—Å–∫—É—é –≤–µ—Ä—Å–∏—é, –ø–æ—ç—Ç–æ–º—É –º—ã –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –ø—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é,
        –∫–æ—Ç–æ—Ä–∞—è —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Ç–µ—Ä–ø–µ–Ω–∏–µ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ üòá
      </Alert>
    </>
  );
}

export default References;
